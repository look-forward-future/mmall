<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	 <display-name>Archetype Created Web Application</display-name>
	<!-- 下面的filter标签是一个过滤器，是转码用的，这样我们就不用去写转UTF-8的这种encoding,使用springframework就可以啦，
	 这个filter这对标签和filter-mapping这对标签是组合使用的，filter-mapping标签中的url-pattern这对标签的内容为："/*"，表示拦截所有的路径
	 再调用filter-class类来处理 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--  下面的配置是：用于web容器启动和关闭的监听器-->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- 下面的配置是将我们的web容器和spring容器进行一个整合 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!--下面是将applicationContext.xml添加进来，由于：applicationContext.xml文件中是：spring的配置-->
		<param-value>
            classpath:applicationContext.xml
        </param-value>
	</context-param>
	<!-- 下面是对springMVC的配置 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--   下面的load-on-startup标签的作用是：当标签中的数值为：大于等于0的时候，容器在启动时就会初始化这个servlet,就是调用DispatcherServlet的初始化方法 
		当这个值小于0或者不指定的时候，只有当这个dispatcher(servlet容器)被指定时，才会去加载-->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 下面的配置是说："*.do"的请求都会被springMVC拦截， -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

</web-app>